---
title: 'Documenting your analyses with Rmarkdown'
subtitle: 'Lecture 11 • watch by March 26, 2025'
date: 2018-12-31 00:00:00
description: In order to make your analysis pipeline transparent and reproducible, in this class you'll use Rmarkdown and Knitr to wrap up all your code and outputs together in a dynamic document. Reproducing an analysis requires more than just code. To address this challenge, you'll learn how to 'containerize'  your data, scripts and software, making it easy to share and rerun an entire analysis with the push of a button.
featured_image: '/images/breadcrumbs2.jpg'
---

[Lecture slides on iCloud](https://www.icloud.com/keynote/0Vu6tndCpajbMEMseVYy3Hj9A#Lecture12%5FRmarkdown)

[Lecture slides on iCloud](https://www.icloud.com/keynote/0gPGSkggD-NUmJUg9tSyFis2w#Lecture13%5Freproducibility)


## Overview

In order to document the code and results from a bioinformatics workflow you'll be introduced to [R Markdown](http://rmarkdown.rstudio.com/) and [Knitr](http://yihui.name/knitr/), and will use these tools to wrap up all your code and outputs (figures, tables, etc) together in a dyanmic document that can be placed in your lab notebook or published as a supplementary file in your manuscript.  Reproducing an analysis requires more than just code. You need the original raw data, access to the appropriate programming languages, and application specific packages (and often specific versions of these packages).  This poses a major impediment to reproducibility, even for researchers with a background in bioinformatics.  To address this challenge, you'll learn how to 'containerize'  your data, scripts and software, making it easy to share and rerun an entire analysis with the push of a button.

## Learning objectives

* Discuss the basic building blocks for assembling a figure
* Understand the basics of Rmarkdown and dynamic documents
* Learn how to construct an Rmarkdown doc using 'essential' code chunks from the course.
* make a flexdashboard the incorporates graphics and code
* Learn how to make your research analyses reproducible
* Create a reproducible package environment with [renv](https://rstudio.github.io/renv/articles/renv.html)
* Share your project via [GitHub](https://github.com/) and git
* Understand how to streamline code using custom R functions.

## Code

[Rmarkdown_template.Rmd](https://DIYtranscriptomics.github.io/Code/files/Rmarkdown_template.Rmd) - a skeletal template that you can fill out with the code 'essentials' that we covered in class.

[Rmarkdown_essentials.Rmd](https://DIYtranscriptomics.github.io/Code/files/Rmarkdown_essentials.Rmd) - same template as above, but already filled in with essentials

[flexdashboard_essentials.Rmd](https://DIYtranscriptomics.github.io/Code/files/flexdashboard_essentials.Rmd) - a different style of Rmarkdown that puts the focus on creating a dashboard of graphics.  Particularly powerful when combined with the interactive graphs we produced during the course.

---

## Lecture videos

### Part 1 – Building blocks for making a good figure

<iframe src="https://player.vimeo.com/video/424060469" width="640" height="268" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>

### Part 2 - Introduction to markdown

<iframe src="https://player.vimeo.com/video/424071155" width="640" height="268" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>

### Part 3 - Constructing an Rmarkdown document that compiles to HTML or PDF

<iframe src="https://player.vimeo.com/video/424086672" width="640" height="268" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>

### Part 4 - Reproducibility via the renv package

<iframe src="https://player.vimeo.com/video/426273940" width="640" height="268" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>

### Part 5 - Keeping your code clean via custom functions

<iframe src="https://player.vimeo.com/video/426552841" width="640" height="268" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>


---

## Reading

[lab post on Knitr by Karl Broman](http://kbroman.org/knitr_knutshell/)

[Happy Git and GitHub with RStudio](https://happygitwithr.com/) - Jenny Bryan and team walk through every step of how to install git, connect to GitHub and access version control from within RStudio.

There's a lot of reading material for how to get started making functions and packages.  Beyond the extensive and very well written [book on building R packages](http://r-pkgs.had.co.nz/) and excellent documentation for the [usethis package](https://usethis.r-lib.org/), you may also want to check out some great lab posts on making R packages ([here](https://masalmon.eu/2017/12/11/goodrpackages/), [here](https://r-mageddon.netlify.app/post/writing-an-r-package-from-scratch/), [here](https://tinyheero.github.io/jekyll/update/2015/07/26/making-your-first-R-package.html), and [here](https://kbroman.org/pkg_primer/)).


---

### Other examples of markdown in action

Supplementary code files from some of our recent papers:

* [here](http://journals.plos.org/plospathogens/article?id=10.1371/journal.ppat.1005347) ([PDF](http://DIYtranscriptomics.github.io/Reading/files/trichinella_markdown.pdf))
* [here](https://www.nature.com/articles/s41564-019-0539-x) ([PDF](http://DIYtranscriptomics.github.io/Reading/files/crypto_markdown.pdf))
* [here](https://stm.sciencemag.org/content/11/519/eaax4204) ([PDF](http://DIYtranscriptomics.github.io/Reading/files/leish_markdown.pdf))

[Make your own CV in markdown](https://github.com/dpbisme/CV_rmarkdown) - uses the [Vitae](https://github.com/ropenscilabs/vitae) and [Scholar](https://cran.r-project.org/web/packages/scholar/vignettes/scholar.html) packages in R. Here's mine on github

[This course website!](https://github.com/DIYtranscriptomics/DIYtranscriptomics.github.io) - Each page on the course website is just a simple markdown document.

[My lab website](http://hostmicrobe.org/) is just a bunch of markdown files served from github (repo [here](https://github.com/hostmicrobe/hostmicrobe.github.io))
